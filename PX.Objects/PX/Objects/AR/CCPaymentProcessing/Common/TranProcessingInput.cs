// Decompiled with JetBrains decompiler
// Type: PX.Objects.AR.CCPaymentProcessing.Common.TranProcessingInput
// Assembly: PX.Objects, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CF76B6BF-0C8A-413D-8225-C21BEAE6CEEC
// Assembly location: D:\tmp\2025 R2 DLLs\PX.Objects.dll
// XML documentation location: D:\tmp\2025 R2 DLLs\PX.Objects.xml

using System;

#nullable disable
namespace PX.Objects.AR.CCPaymentProcessing.Common;

/// <summary>A supplementary class to receive specific transaction data from the Acumatica ERP core.</summary>
public class TranProcessingInput
{
  /// <summary>The internal unique transaction identifier.</summary>
  public int TranID;
  /// <summary>The internal Acumatica ERP unique credit card identifier.</summary>
  /// <remarks>Information on credit cards might be obtained by using the <tt>ReadData</tt> method of the <see cref="!:ICreditCardDataReader" /> interface.</remarks>
  public int? PMInstanceID;
  /// <summary>The unique customer identifier.</summary>
  public string CustomerCD;
  /// <summary>The type of the payment document.</summary>
  /// <remarks>Document information might be obtained by using <see cref="!:IDocDetailsDataReader" /> interface.</remarks>
  public string DocType;
  /// <summary>The reference number of the payment document.</summary>
  /// <remarks>Document information might be obtained by using <see cref="!:IDocDetailsDataReader" /> interface.</remarks>
  public string DocRefNbr;
  /// <summary>The original reference number of the document.</summary>
  public string OrigRefNbr;
  /// <summary>The ISO code of the transaction currency.</summary>
  public string CuryID;
  /// <summary>The amount of transaction.</summary>
  public Decimal Amount;
  /// <summary>A field that indicates (if set to <tt>true</tt>) that verification of the CVV is required.</summary>
  public bool VerifyCVV;
  /// <summary>A unique identifier of transaction generated by Acumatica ERP. </summary>
  public Guid? TranUID;
  /// <summary>Means of payment of the transaction.</summary>
  public string MeansOfPayment;
  /// <summary>Amount before tax.</summary>
  public Decimal? SubtotalAmount;
  /// <summary>Total tax amount.</summary>
  public Decimal? Tax;
  /// <summary>Terminal ID</summary>
  public string POSTerminalID;
}
