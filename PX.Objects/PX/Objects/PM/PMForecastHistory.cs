// Decompiled with JetBrains decompiler
// Type: PX.Objects.PM.PMForecastHistory
// Assembly: PX.Objects, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CF76B6BF-0C8A-413D-8225-C21BEAE6CEEC
// Assembly location: D:\tmp\2025 R2 DLLs\PX.Objects.dll
// XML documentation location: D:\tmp\2025 R2 DLLs\PX.Objects.xml

using PX.Data;
using PX.Data.BQL;
using PX.Objects.CM.Extensions;
using PX.Objects.GL;
using PX.Objects.IN;
using System;
using System.Diagnostics.CodeAnalysis;

#nullable enable
namespace PX.Objects.PM;

/// <summary>
/// Represents a detail line for the history of a project budget forecast.
/// Contains actual values and change order values for the forecast detail lines
/// as totals by the budget complex key and financial period.
/// </summary>
[ExcludeFromCodeCoverage]
[PXCacheName("Budget Forecast History")]
[PXPrimaryGraph(typeof (ForecastMaint))]
[Serializable]
public class PMForecastHistory : PXBqlTable, IBqlTable, IBqlTableSystemDataStorage, IProjectFilter
{
  protected 
  #nullable disable
  byte[] _tstamp;

  /// <summary>
  /// The <see cref="T:PX.Objects.PM.PMProject">project</see> of the project budget forecast.
  /// </summary>
  /// <value>
  /// The value of this field corresponds to the value of the <see cref="P:PX.Objects.PM.PMProject.ContractID" /> field.
  /// </value>
  [PXDBInt(IsKey = true)]
  public virtual int? ProjectID { get; set; }

  /// <summary>Get or set Project TaskID</summary>
  public int? TaskID => this.ProjectTaskID;

  /// <summary>
  /// The <see cref="T:PX.Objects.PM.PMTask">project task</see> of the budget line.
  /// </summary>
  /// <value>
  /// The value of this field corresponds to the value of the <see cref="T:PX.Objects.PM.PMTask.taskID" /> field.
  /// </value>
  [PXDBInt(IsKey = true)]
  public virtual int? ProjectTaskID { get; set; }

  /// <summary>
  /// The <see cref="T:PX.Objects.PM.PMAccountGroup">project account group</see> of the budget line.
  /// </summary>
  /// <value>
  /// The value of this field corresponds to the value of the <see cref="P:PX.Objects.PM.PMAccountGroup.GroupID" /> field.
  /// </value>
  [PXDBInt(IsKey = true)]
  public virtual int? AccountGroupID { get; set; }

  /// <summary>
  /// The <see cref="T:PX.Objects.IN.InventoryItem">inventory item</see> of the budget line.
  /// </summary>
  /// <value>
  /// The value of this field corresponds to the value of the <see cref="P:PX.Objects.IN.InventoryItem.InventoryID" /> field.
  /// </value>
  [PXDBInt(IsKey = true)]
  public virtual int? InventoryID { get; set; }

  /// <summary>
  /// The <see cref="T:PX.Objects.PM.PMCostCode">project cost code</see> of the budget line.
  /// </summary>
  /// <value>
  /// The value of this field corresponds to the value of the <see cref="P:PX.Objects.PM.PMCostCode.CostCodeID" /> field.
  /// </value>
  [PXDBInt(IsKey = true)]
  public virtual int? CostCodeID { get; set; }

  /// <summary>The financial period.</summary>
  /// <value>
  /// The value of this field corresponds to the value of the <see cref="P:PX.Objects.GL.FinPeriods.TableDefinition.FinPeriod.FinPeriodID" /> field.
  /// </value>
  [FinPeriodID(null, null, null, null, null, null, true, false, null, null, null, true, true, IsKey = true)]
  public virtual string PeriodID { get; set; }

  /// <summary>
  /// The total quantity of the lines of the released AR invoices that correspond to the project budget line.
  /// </summary>
  [PXDBQuantity]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Actual Quantity", Enabled = false)]
  public virtual Decimal? ActualQty { get; set; }

  /// <summary>
  /// The total amount of the lines of the released AR invoices that correspond to the line of project budget history.
  /// </summary>
  [PXDBBaseCury]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Actual Amount generated by AR Invoices", Enabled = false)]
  public virtual Decimal? CuryArAmount { get; set; }

  /// <summary>
  /// The total amount of the lines of the released AR invoices that correspond to the project budget line.
  /// </summary>
  [PXDBBaseCury]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Actual Amount", Enabled = false)]
  public virtual Decimal? CuryActualAmount { get; set; }

  /// <summary>
  /// The <see cref="P:PX.Objects.PM.PMForecastHistory.CuryActualAmount">actual amount</see> in the base currency.
  /// </summary>
  [PXDBBaseCury]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Actual Amount in Base Currency", Enabled = false)]
  public virtual Decimal? ActualAmount { get; set; }

  /// <summary>
  /// The inclusive tax amount in project currency calculated from the data of <see cref="P:PX.Objects.AR.ARTran.CuryTaxAmt" />
  /// and from the data of <see cref="P:PX.Objects.AR.ARTax.CuryRetainedTaxAmt" />.
  /// </summary>
  [PXDBBaseCury]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Inclusive Tax Amount", Visible = false, Enabled = false)]
  public virtual Decimal? CuryInclTaxAmount { get; set; }

  [PXDBBaseCury]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Inclusive Tax Amount in Base Currency", Visible = false, Enabled = false)]
  public virtual Decimal? InclTaxAmount { get; set; }

  /// <summary>
  /// The total quantity of the potential changes to the project budget.
  /// </summary>
  [PXDBQuantity]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Potential CO Quantity", Enabled = false, FieldClass = "CHANGEORDER")]
  public virtual Decimal? DraftChangeOrderQty { get; set; }

  /// <summary>
  /// The total amount of the potential changes to the project budget.
  /// </summary>
  [PXDBBaseCury]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Potential CO Amount", Enabled = false, FieldClass = "CHANGEORDER")]
  public virtual Decimal? CuryDraftChangeOrderAmount { get; set; }

  /// <summary>
  /// The total quantity of the lines of released change orders that are associated with the project budget line.
  /// </summary>
  [PXDBQuantity]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Budgeted CO Quantity", Enabled = false, FieldClass = "CHANGEORDER")]
  public virtual Decimal? ChangeOrderQty { get; set; }

  /// <summary>
  /// The total amount of the lines of released change orders that are associated with the project budget line.
  /// </summary>
  [PXDBBaseCury]
  [PXDefault(TypeCode.Decimal, "0.0")]
  [PXUIField(DisplayName = "Budgeted CO Amount", Enabled = false, FieldClass = "CHANGEORDER")]
  public virtual Decimal? CuryChangeOrderAmount { get; set; }

  [PXDBTimestamp]
  public virtual byte[] tstamp
  {
    get => this._tstamp;
    set => this._tstamp = value;
  }

  public abstract class projectID : BqlType<
  #nullable enable
  IBqlInt, int>.Field<
  #nullable disable
  PMForecastHistory.projectID>
  {
  }

  public abstract class projectTaskID : BqlType<
  #nullable enable
  IBqlInt, int>.Field<
  #nullable disable
  PMForecastHistory.projectTaskID>
  {
  }

  public abstract class accountGroupID : 
    BqlType<
    #nullable enable
    IBqlInt, int>.Field<
    #nullable disable
    PMForecastHistory.accountGroupID>
  {
  }

  public abstract class inventoryID : BqlType<
  #nullable enable
  IBqlInt, int>.Field<
  #nullable disable
  PMForecastHistory.inventoryID>
  {
  }

  public abstract class costCodeID : BqlType<
  #nullable enable
  IBqlInt, int>.Field<
  #nullable disable
  PMForecastHistory.costCodeID>
  {
  }

  public abstract class periodID : BqlType<
  #nullable enable
  IBqlString, string>.Field<
  #nullable disable
  PMForecastHistory.periodID>
  {
  }

  public abstract class actualQty : BqlType<
  #nullable enable
  IBqlDecimal, Decimal>.Field<
  #nullable disable
  PMForecastHistory.actualQty>
  {
  }

  public abstract class curyArAmount : 
    BqlType<
    #nullable enable
    IBqlDecimal, Decimal>.Field<
    #nullable disable
    PMForecastHistory.curyArAmount>
  {
  }

  public abstract class curyActualAmount : 
    BqlType<
    #nullable enable
    IBqlDecimal, Decimal>.Field<
    #nullable disable
    PMForecastHistory.curyActualAmount>
  {
  }

  public abstract class actualAmount : 
    BqlType<
    #nullable enable
    IBqlDecimal, Decimal>.Field<
    #nullable disable
    PMForecastHistory.actualAmount>
  {
  }

  public abstract class curyInclTaxAmount : 
    BqlType<
    #nullable enable
    IBqlDecimal, Decimal>.Field<
    #nullable disable
    PMForecastHistory.curyInclTaxAmount>
  {
  }

  public abstract class inclTaxAmount : 
    BqlType<
    #nullable enable
    IBqlDecimal, Decimal>.Field<
    #nullable disable
    PMForecastHistory.inclTaxAmount>
  {
  }

  public abstract class draftChangeOrderQty : 
    BqlType<
    #nullable enable
    IBqlDecimal, Decimal>.Field<
    #nullable disable
    PMForecastHistory.draftChangeOrderQty>
  {
  }

  public abstract class curyDraftChangeOrderAmount : 
    BqlType<
    #nullable enable
    IBqlDecimal, Decimal>.Field<
    #nullable disable
    PMForecastHistory.curyDraftChangeOrderAmount>
  {
  }

  public abstract class changeOrderQty : 
    BqlType<
    #nullable enable
    IBqlDecimal, Decimal>.Field<
    #nullable disable
    PMForecastHistory.changeOrderQty>
  {
  }

  public abstract class curyChangeOrderAmount : 
    BqlType<
    #nullable enable
    IBqlDecimal, Decimal>.Field<
    #nullable disable
    PMForecastHistory.curyChangeOrderAmount>
  {
  }

  public abstract class Tstamp : BqlType<
  #nullable enable
  IBqlByteArray, byte[]>.Field<
  #nullable disable
  PMForecastHistory.Tstamp>
  {
  }
}
